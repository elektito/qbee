# success
print abs(-1.1)
---
io: terminal, print, " 1.1 \r\n"
===
print abs(1.1)
---
io: terminal, print, " 1.1 \r\n"
===
print abs(10)
---
io: terminal, print, " 10 \r\n"
===
print abs(-100)
---
io: terminal, print, " 100 \r\n"
===
print 1.1 = abs(-1.1)
---
io: terminal, print, "-1 \r\n"
===
print 1.1# = abs(-1.1#)
---
io: terminal, print, "-1 \r\n"
===
print 1.1# = abs(-1.1!)
---
io: terminal, print, " 0 \r\n"
=== ASC ===
print asc("A")
---
io: terminal, print, " 65 \r\n"
===
print asc(65)
---
compileerror: TYPE_MISMATCH
=== CHR$ ===
print chr$(34)
---
io: terminal, print, "\"\r\n"
===
print chr$("A")
---
compileerror: TYPE_MISMATCH
=== CINT ===
print cint(1.4)
---
io: terminal, print, " 1 \r\n"
===
print cint(1.5)
---
io: terminal, print, " 2 \r\n"
===
print cint(-1.4)
---
io: terminal, print, "-1 \r\n"
===
print cint(100000)
---
trap: INVALID_CELL_VALUE
===
print cint("A")
---
compileerror: TYPE_MISMATCH
=== CLNG ===
print clng(1.4)
---
io: terminal, print, " 1 \r\n"
===
print clng(1.5)
---
io: terminal, print, " 2 \r\n"
===
print clng(3.2e12)
---
trap: INVALID_CELL_VALUE
===
print clng(-1.4)
---
io: terminal, print, "-1 \r\n"
===
print clng("A")
---
compileerror: TYPE_MISMATCH
=== INKEY$ ===
print inkey$
---
io: terminal, print, "\r\n"
=== INKEY$ ===
print inkey$
---
with_inkey: "A"
io: terminal, print, "A\r\n"
=== INSTR ===
print instr("foobar", "bar")
---
io: terminal, print, " 4 \r\n"
===
print instr(2, "foobar", "bar")
---
io: terminal, print, " 4 \r\n"
===
print instr(5, "foobar", "bar")
---
io: terminal, print, " 0 \r\n"
===
print instr(80, "foobar", "bar")
---
io: terminal, print, " 0 \r\n"
===
print instr("foobar", "bars")
---
io: terminal, print, " 0 \r\n"
===
print instr(0, "foobar", "bar")
---
trap: INVALID_OPERAND_VALUE
===
print instr(-1, "foobar", "bar")
---
trap: INVALID_OPERAND_VALUE
===
print instr("1", "foobar", "bar")
---
compileerror: TYPE_MISMATCH
=== INT ===
print int(1.6)
---
io: terminal, print, " 1 \r\n"
===
print int(-1.6)
---
io: terminal, print, "-2 \r\n"
===
print int("A")
---
compileerror: TYPE_MISMATCH
=== LBOUND ===
dim a(5 to 10) as long
print lbound(a)
---
io: terminal, print, " 5 \r\n"
===
lb = 5
ub = 10
dim a(lb to ub) as long
print lbound(a)
---
io: terminal, print, " 5 \r\n"
===
dim a(-20 to -10, 1 to 33, 45 to 88)
print lbound(a); lbound(a, 1); lbound(a, 2); lbound(a, 3)
---
io: terminal, print, "-20 -20  1  45 \r\n"
===
print lbound(a)
---
compileerror: TYPE_MISMATCH
===
dim a(5) as long
print lbound(a, 2)
---
trap: INDEX_OUT_OF_RANGE
===
dim shared x as integer
dim shared y(10 to 30) as long
print lbound(y)
---
io: terminal, print, " 10 \r\n"
===
dim shared x as integer
foo

sub foo static
    dim y(10 to 30) as long
    print lbound(y)
end sub
---
io: terminal, print, " 10 \r\n"
=== LCASE$ ===
print lcase$("FooBar")
---
io: terminal, print, "foobar\r\n"
===
print lcase$(1)
---
compileerror: TYPE_MISMATCH
=== LEFT$ ===
print left$("FooBar", 3)
---
io: terminal, print, "Foo\r\n"
===
print left$("FooBar", 10)
---
io: terminal, print, "FooBar\r\n"
===
print left$("FooBar", -3)
---
trap: INVALID_OPERAND_VALUE
===
print left$(1, 3)
---
compileerror: TYPE_MISMATCH
===
print left$("FooBar", "3")
---
compileerror: TYPE_MISMATCH
=== LTRIM$ ===
print ltrim$("   foobar   ")
---
io: terminal, print, "foobar   \r\n"
=== LEN ===
print len("foo")
---
io: terminal, print, " 3 \r\n"
===
print len("")
---
io: terminal, print, " 0 \r\n"
=== MID$ ===
print mid$("FooBar", 3, 2)
---
io: terminal, print, "oB\r\n"
===
print mid$("FooBar", 3, 0)
---
io: terminal, print, "\r\n"
===
print mid$("FooBar", 30, 1)
---
io: terminal, print, "\r\n"
===
print mid$("FooBar", 3)
---
io: terminal, print, "oBar\r\n"
===
print mid$("FooBar", 0)
---
trap: INVALID_OPERAND_VALUE
===
print mid$("FooBar", -1)
---
trap: INVALID_OPERAND_VALUE
===
print mid$("FooBar", 3, -1)
---
trap: INVALID_OPERAND_VALUE
===
print mid$("FooBar", "3", 1)
---
compileerror: TYPE_MISMATCH
===
print mid$("FooBar", "3")
---
compileerror: TYPE_MISMATCH
===
print mid$("FooBar", 3, "1")
---
compileerror: TYPE_MISMATCH
===
print mid$("FooBar", 3.5, 1.1)
---
io: terminal, print, "B\r\n"
=== RIGHT$ ===
print right$("FooBar", 3)
---
io: terminal, print, "Bar\r\n"
===
print right$("FooBar", 10)
---
io: terminal, print, "FooBar\r\n"
===
print right$("FooBar", -3)
---
trap: INVALID_OPERAND_VALUE
===
print right$(1, 3)
---
compileerror: TYPE_MISMATCH
===
print right$("FooBar", "3")
---
compileerror: TYPE_MISMATCH
=== RND ===
print rnd(1)
print rnd(0)
print rnd(0)
print rnd(2)
---
with_rnd: 0.1, 0.2, 0.3
io: terminal, print, " 0.1 \r\n"
io: terminal, print, " 0.1 \r\n"
io: terminal, print, " 0.1 \r\n"
io: terminal, print, " 0.2 \r\n"
===
print rnd(-1)
print rnd(-1)
print rnd(-2)
---
io: terminal, print, " 0.01 \r\n"
io: terminal, print, " 0.01 \r\n"
io: terminal, print, " 0.02 \r\n"
=== RTRIM$ ===
print rtrim$("   foobar   ")
---
io: terminal, print, "   foobar\r\n"
=== SPACE$ ===
print space$(3)
---
io: terminal, print, "   \r\n"
===
print space$(0)
---
io: terminal, print, "\r\n"
===
print space$(-1)
---
trap: INVALID_OPERAND_VALUE
=== STR$ ===
print str$(10)
---
io: terminal, print, " 10\r\n"
===
print str$(-10)
---
io: terminal, print, "-10\r\n"
===
print str$(0)
---
io: terminal, print, " 0\r\n"
=== STRING$ ===
print string$(5, 65)
---
io: terminal, print, "AAAAA\r\n"
===
print string$(3, "XYZ")
---
io: terminal, print, "XXX\r\n"
===
print string$(0, "XYZ")
---
io: terminal, print, "\r\n"
===
print string$(0, 65)
---
io: terminal, print, "\r\n"
===
print string$(-1, 65)
---
trap: INVALID_OPERAND_VALUE
===
print string$(-1, "A")
---
trap: INVALID_OPERAND_VALUE
===
print string$(4, 65.5)
---
io: terminal, print, "BBBB\r\n"
===
type foo
     x as integer
end type
dim c as foo
print string$(3, c)
---
compileerror: TYPE_MISMATCH
===
dim c(5) as integer
print string$(3, c)
---
compileerror: TYPE_MISMATCH
===
print string$("3", 65)
---
compileerror: TYPE_MISMATCH
===
type foo
     x as integer
end type
dim c as foo
print string$(c, 65)
---
compileerror: TYPE_MISMATCH
===
dim c(5) as integer
print string$(c, 65)
---
compileerror: TYPE_MISMATCH
=== TIMER ===
print timer
print timer
---
with_timer: 1000, 2000
io: terminal, print, " 1000 \r\n"
io: terminal, print, " 2000 \r\n"
=== UBOUND ===
dim a(5 to 10) as long
print ubound(a)
---
io: terminal, print, " 10 \r\n"
===
lb = 5
ub = 10
dim a(lb to ub) as long
print ubound(a)
---
io: terminal, print, " 10 \r\n"
===
dim a(-20 to -10, 1 to 33, 45 to 88)
print ubound(a); ubound(a, 1); ubound(a, 2); ubound(a, 3)
---
io: terminal, print, "-10 -10  33  88 \r\n"
===
print ubound(a)
---
compileerror: TYPE_MISMATCH
===
dim a(5) as long
print ubound(a, 2)
---
trap: INDEX_OUT_OF_RANGE
===
dim shared x as integer
dim shared y(10 to 30) as long
print ubound(y)
---
io: terminal, print, " 30 \r\n"
===
dim shared x as integer
foo

sub foo static
    dim y(10 to 30) as long
    print ubound(y)
end sub
---
io: terminal, print, " 30 \r\n"
=== UCASE$ ===
print ucase$("FooBar")
---
io: terminal, print, "FOOBAR\r\n"
===
print ucase$(1)
---
compileerror: TYPE_MISMATCH
=== VAL ===
print val("10")
---
io: terminal, print, " 10 \r\n"
===
print val("1.1")
---
io: terminal, print, " 1.1 \r\n"
===
print val("1.1e-2")
---
io: terminal, print, " 0.011 \r\n"
===
print val("1.1D-2")
---
io: terminal, print, " 0.011 \r\n"
===
print val("-2.9")
---
io: terminal, print, "-2.9 \r\n"
===
print val("10.25x")
---
io: terminal, print, " 10.25 \r\n"
===
print val("x")
---
io: terminal, print, " 0 \r\n"
===
